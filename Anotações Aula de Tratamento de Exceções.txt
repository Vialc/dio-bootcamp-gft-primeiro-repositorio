Apesar da hierarquia de classes existentes com base na classe exception, é possível criar sua própria classe de exceção
de acordo com a necessidade.

Motivações: -Quando uma exceção reflete um erro específico que não foi mapeado por uma classe de exceção existente.
	    -Quando a exceção necessita de um tratamento diferenciado.

Procedimento:
	1-Definir uma classe que herda de Exception
	2-Definir construtores da classe
	3-Se necessãrio, sobrescreva membros cujo comportamento queira modificar
	4-Definir se a exceção será serializável.

		-Boas práticas para o tratamento de exceções-
	1-Use try/catch/finally em trechos de códigos que podem potencialmente gerar exceções
		e que de fato seu próprio código também consegue tratar.

	2-Nos blocos catch, sempre ordene os tratamentos das exceções das classes mais específicas
		para as mais genéricas
	
	3-Faça impeza automática de recursos alocados com using.
	Caso o objeto não implemente IDisposable utilize 

	4-Caso exista uma condição com grandes chances de erro, verifique a viabilidade de checar a condição
	Antes de somente tratar a condição (if)

	5-Projete classes de forma que as exceções sejam evitadas ou minimizadas 
					(erros comuns podem ser considerados como fluxo nrmal)

	6-Lance exceções ao invés de somente retornar um status code.
	
	7-Somente crie novas classes de exceções, caso as pré-definidas não satisfaçam as necessidades do código.

	8-Crie classes com a terminação Exception e derivadas diretamente da classe base Exception.

	9-Utilize no mínimo os construtores já definidos na classe base.

	10-Escreva mensagens de erros claras e sucintas.
	
	11-É uma boa prática incluir strings traduzidas de acordo com a linguagem do usuário da aplicação através de 
	sattelites assemblies.
	
	12-Em exceções customizadas forneça propriedades adicionais conforme necessidade.

	13-Utilize o comando throw para que o stack trace seja mais util, pois o rastreio começa a partir do lançamento
	até a captura da exceção.

	14-Utilize métodosconstrutores de exceções.

	15-Restaure o estado da aplicação caso os métodos completem sua execução devido à exceções.

			MSTest V2 -- XUnit -- Nunit